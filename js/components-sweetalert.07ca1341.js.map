{"version":3,"file":"js/components-sweetalert.07ca1341.js","mappings":"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","sources":["webpack://cork-vue3/./node_modules/core-js/modules/es.array.includes.js","webpack://cork-vue3/./src/views/components/sweetalert.vue","webpack://cork-vue3/./src/views/components/sweetalert.vue?567b"],"sourcesContent":["'use strict';\nvar $ = require('../internals/export');\nvar $includes = require('../internals/array-includes').includes;\nvar fails = require('../internals/fails');\nvar addToUnscopables = require('../internals/add-to-unscopables');\n\n// FF99+ bug\nvar BROKEN_ON_SPARSE = fails(function () {\n  return !Array(1).includes();\n});\n\n// `Array.prototype.includes` method\n// https://tc39.es/ecma262/#sec-array.prototype.includes\n$({ target: 'Array', proto: true, forced: BROKEN_ON_SPARSE }, {\n  includes: function includes(el /* , fromIndex = 0 */) {\n    return $includes(this, el, arguments.length > 1 ? arguments[1] : undefined);\n  }\n});\n\n// https://tc39.es/ecma262/#sec-array.prototype-@@unscopables\naddToUnscopables('includes');\n","<template>\r\n    <div class=\"container\">\r\n        <teleport to=\"#breadcrumb\">\r\n            <ul class=\"navbar-nav flex-row\">\r\n                <li>\r\n                    <div class=\"page-header\">\r\n                        <nav class=\"breadcrumb-one\" aria-label=\"breadcrumb\">\r\n                            <ol class=\"breadcrumb\">\r\n                                <li class=\"breadcrumb-item\"><a href=\"javascript:;\">Components</a></li>\r\n                                <li class=\"breadcrumb-item active\" aria-current=\"page\"><span>Sweet Alerts</span></li>\r\n                            </ol>\r\n                        </nav>\r\n                    </div>\r\n                </li>\r\n            </ul>\r\n        </teleport>\r\n\r\n        <div class=\"container\">\r\n            <div id=\"navSection\" class=\"nav sidenav\">\r\n                <div class=\"sidenav-content\" v-scroll-spy-active v-scroll-spy-link>\r\n                    <a href=\"#sweetalertbasic\" class=\"nav-link\">Basic</a>\r\n                    <a href=\"#sweetalertmessage\" class=\"nav-link\">Message</a>\r\n                    <a href=\"#sweetalertdynamic\" class=\"nav-link\">Dynamic</a>\r\n                    <a href=\"#sweetalertatitlewithtext\" class=\"nav-link\">A title with text</a>\r\n                    <a href=\"#sweetalertchainingmodals\" class=\"nav-link\">Chaining modals</a>\r\n                    <a href=\"#sweetalertanimation\" class=\"nav-link\">Animation</a>\r\n                    <a href=\"#sweetalertautoclosetimer\" class=\"nav-link\">Auto close timer</a>\r\n                    <a href=\"#sweetalertcustomimage\" class=\"nav-link\">Custom image</a>\r\n                    <a href=\"#sweetalertcustomhtml\" class=\"nav-link\">Custom HTML</a>\r\n                    <a href=\"#sweetalertwarningmessage\" class=\"nav-link\">Warning message</a>\r\n                    <a href=\"#sweetalertcancel\" class=\"nav-link\">Cancel</a>\r\n                    <a href=\"#sweetalertcustomstyle\" class=\"nav-link\">Custom Style</a>\r\n                    <a href=\"#sweetalertfooter\" class=\"nav-link\">Footer</a>\r\n                    <a href=\"#sweetalertrtl\" class=\"nav-link\">RTL</a>\r\n                    <a href=\"#sweetalertmixin\" class=\"nav-link\">Mixin</a>\r\n                </div>\r\n            </div>\r\n            <div class=\"row layout-top-spacing\">\r\n                <div class=\"col-12\">\r\n                    <div class=\"alert alert-arrow-left alert-icon-left alert-light-info mb-0 text-break\">\r\n                        <svg\r\n                            xmlns=\"http://www.w3.org/2000/svg\"\r\n                            width=\"24\"\r\n                            height=\"24\"\r\n                            viewBox=\"0 0 24 24\"\r\n                            fill=\"none\"\r\n                            stroke=\"currentColor\"\r\n                            stroke-width=\"2\"\r\n                            stroke-linecap=\"round\"\r\n                            stroke-linejoin=\"round\"\r\n                            class=\"feather feather-bell\"\r\n                        >\r\n                            <path d=\"M18 8A6 6 0 0 0 6 8c0 7-3 9-3 9h18s-3-2-3-9\"></path>\r\n                            <path d=\"M13.73 21a2 2 0 0 1-3.46 0\"></path>\r\n                        </svg>\r\n                        Documentation:\r\n                        <a target=\"_blank\" href=\"https://www.npmjs.com/package/vue-sweetalert2\" class=\"text-info\"> https://www.npmjs.com/package/vue-sweetalert2 </a>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div v-scroll-spy class=\"row layout-top-spacing\">\r\n                <div id=\"sweetalertbasic\" class=\"col-lg-12 col-12 layout-spacing\">\r\n                    <div class=\"statbox panel box box-shadow\">\r\n                        <div class=\"panel-heading\">\r\n                            <div class=\"row\">\r\n                                <div class=\"col-xl-12 col-md-12 col-sm-12 col-12\">\r\n                                    <h4>Basic message</h4>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"panel-body text-center\">\r\n                            <button type=\"button\" class=\"btn btn-primary me-2 btn\" @click=\"showAlert(1)\">Basic message</button>\r\n                            <div class=\"code-section-container show-code\">\r\n                                <button class=\"btn btn-default toggle-code-snippet\" @click=\"toggleCode('code1')\"><span>Code</span></button>\r\n\r\n                                <div v-if=\"code_arr.includes('code1')\" class=\"code-section text-start\">\r\n                                    <highlight>\r\n                                        <pre>\r\n&lt;button variant=&quot;primary&quot; class=&quot;me-2 btn&quot; @click=&quot;showAlert(1)&quot;&gt;Basic message&lt;/button&gt;\r\n\r\n new window.Swal({\r\n    title: 'Saved succesfully',\r\n    padding: '2em'\r\n});\r\n                                        </pre>\r\n                                    </highlight>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div id=\"sweetalertmessage\" class=\"col-lg-12 col-12 layout-spacing\">\r\n                    <div class=\"statbox panel box box-shadow\">\r\n                        <div class=\"panel-heading\">\r\n                            <div class=\"row\">\r\n                                <div class=\"col-xl-12 col-md-12 col-sm-12 col-12\">\r\n                                    <h4>Success message</h4>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"panel-body text-center\">\r\n                            <button type=\"button\" class=\"btn btn-primary me-2 btn\" @click=\"showAlert(2)\">Success message!</button>\r\n                            <div class=\"code-section-container show-code\">\r\n                                <button class=\"btn btn-default toggle-code-snippet\" @click=\"toggleCode('code2')\"><span>Code</span></button>\r\n\r\n                                <div v-if=\"code_arr.includes('code2')\" class=\"code-section text-start\">\r\n                                    <highlight>\r\n                                        <pre>\r\n&lt;button variant=&quot;primary&quot; class=&quot;me-2 btn&quot; @click=&quot;showAlert(2)&quot;&gt;Success message!&lt;/button&gt;\r\n\r\nnew window.Swal({\r\n    icon: 'success',\r\n    title: 'Good job!',\r\n    text: 'You clicked the!',\r\n    padding: '2em'\r\n});\r\n                                        </pre>\r\n                                    </highlight>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div id=\"sweetalertdynamic\" class=\"col-lg-12 col-12 layout-spacing\">\r\n                    <div class=\"statbox panel box box-shadow\">\r\n                        <div class=\"panel-heading\">\r\n                            <div class=\"row\">\r\n                                <div class=\"col-xl-12 col-md-12 col-sm-12 col-12\">\r\n                                    <h4>Dynamic queue</h4>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"panel-body text-center\">\r\n                            <button type=\"button\" class=\"btn btn-primary me-2 btn\" @click=\"showAlert(3)\">Dynamic queue</button>\r\n                            <div class=\"code-section-container show-code\">\r\n                                <button class=\"btn btn-default toggle-code-snippet\" @click=\"toggleCode('code3')\"><span>Code</span></button>\r\n\r\n                                <div v-if=\"code_arr.includes('code3')\" class=\"code-section text-start\">\r\n                                    <highlight>\r\n                                        <pre>\r\n&lt;button variant=&quot;primary&quot; class=&quot;me-2 btn&quot; @click=&quot;showAlert(3)&quot;&gt;Dynamic queue&lt;/button&gt;\r\n\r\nconst ipAPI = 'https://api.ipify.org?format=json';\r\nnew window.Swal({\r\n    title: 'Your public IP',\r\n    confirmButtonText: 'Show my public IP',\r\n    text: 'Your public IP will be received ' + 'via AJAX request',\r\n    showLoaderOnConfirm: true,\r\n    preConfirm: () =&gt; {\r\n        return fetch(ipAPI)\r\n            .then(response =&gt; {\r\n                return response.json();\r\n            })\r\n            .then(data =&gt; {\r\n                new window.Swal({\r\n                    title: data.ip\r\n                });\r\n            })\r\n            .catch(() =&gt; {\r\n                new window.Swal({\r\n                    type: 'error',\r\n                    title: 'Unable to get your public IP'\r\n                });\r\n            });\r\n    }\r\n});\r\n                                        </pre>\r\n                                    </highlight>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div id=\"sweetalertatitlewithtext\" class=\"col-lg-12 col-12 layout-spacing\">\r\n                    <div class=\"statbox panel box box-shadow\">\r\n                        <div class=\"panel-heading\">\r\n                            <div class=\"row\">\r\n                                <div class=\"col-xl-12 col-md-12 col-sm-12 col-12\">\r\n                                    <h4>A title with a text under</h4>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"panel-body text-center\">\r\n                            <button type=\"button\" class=\"btn btn-primary me-2 btn\" @click=\"showAlert(4)\">Title & text</button>\r\n                            <div class=\"code-section-container show-code\">\r\n                                <button class=\"btn btn-default toggle-code-snippet\" @click=\"toggleCode('code4')\"><span>Code</span></button>\r\n\r\n                                <div v-if=\"code_arr.includes('code4')\" class=\"code-section text-start\">\r\n                                    <highlight>\r\n                                        <pre>\r\n&lt;button variant=&quot;primary&quot; class=&quot;me-2 btn&quot; @click=&quot;showAlert(4)&quot;&gt;Title &amp; text&lt;/button&gt;\r\n\r\nnew window.Swal({\r\n    icon: 'question',\r\n    title: 'The Internet?',\r\n    text: 'That thing is still around?',\r\n    padding: '2em'\r\n});\r\n                                        </pre>\r\n                                    </highlight>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div id=\"sweetalertchainingmodals\" class=\"col-lg-12 col-12 layout-spacing\">\r\n                    <div class=\"statbox panel box box-shadow\">\r\n                        <div class=\"panel-heading\">\r\n                            <div class=\"row\">\r\n                                <div class=\"col-xl-12 col-md-12 col-sm-12 col-12\">\r\n                                    <h4>Chaining modals (queue)</h4>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"panel-body text-center\">\r\n                            <button type=\"button\" class=\"btn btn-primary me-2 btn\" @click=\"showAlert(5)\">Chaining modals (queue)</button>\r\n                            <div class=\"code-section-container show-code\">\r\n                                <button class=\"btn btn-default toggle-code-snippet\" @click=\"toggleCode('code5')\"><span>Code</span></button>\r\n\r\n                                <div v-if=\"code_arr.includes('code5')\" class=\"code-section text-start\">\r\n                                    <highlight>\r\n                                        <pre>\r\n&lt;button variant=&quot;primary&quot; class=&quot;me-2 btn&quot; @click=&quot;showAlert(5)&quot;&gt;Chaining modals (queue)&lt;/button&gt;\r\n\r\nconst steps = ['1', '2', '3'];\r\nconst swalQueueStep =  window.Swal.mixin({\r\n    confirmButtonText: 'Next &rarr;',\r\n    showCancelButton: true,\r\n    progressSteps: steps,\r\n    input: 'text',\r\n    inputAttributes: {\r\n        required: true\r\n    },\r\n    validationMessage: 'This field is required',\r\n    padding: '2em'\r\n});\r\n\r\nconst values = [];\r\nlet currentStep;\r\n\r\nfor (currentStep = 0; currentStep &lt; steps.length; ) {\r\n    const result = await swalQueueStep.fire({\r\n        title: `Question ${steps[currentStep]}`,\r\n        text: currentStep == 0 ? 'Chaining swal2 modals is easy.' : '',\r\n        inputValue: values[currentStep],\r\n        showCancelButton: currentStep &gt; 0,\r\n        currentProgressStep: currentStep\r\n    });\r\n\r\n    if (result.value) {\r\n        values[currentStep] = result.value;\r\n        currentStep++;\r\n    } else if (result.dismiss === new window.Swal.DismissReason.cancel) {\r\n        currentStep--;\r\n    } else {\r\n        break;\r\n    }\r\n}\r\n\r\nif (currentStep === steps.length) {\r\n    new window.Swal.fire({\r\n        title: 'All done!',\r\n        padding: '2em',\r\n        html: 'Your answers: &lt;pre&gt;' + JSON.stringify(values) + '&lt;/pre&gt;',\r\n        confirmButtonText: 'Lovely!'\r\n    });\r\n}\r\n                                        </pre>\r\n                                    </highlight>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div id=\"sweetalertanimation\" class=\"col-lg-12 col-12 layout-spacing\">\r\n                    <div class=\"statbox panel box box-shadow\">\r\n                        <div class=\"panel-heading\">\r\n                            <div class=\"row\">\r\n                                <div class=\"col-xl-12 col-md-12 col-sm-12 col-12\">\r\n                                    <h4>Custom animation</h4>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"panel-body text-center\">\r\n                            <button type=\"button\" class=\"btn btn-primary me-2 btn\" @click=\"showAlert(6)\">Custom animation</button>\r\n                            <div class=\"code-section-container show-code\">\r\n                                <button class=\"btn btn-default toggle-code-snippet\" @click=\"toggleCode('code6')\"><span>Code</span></button>\r\n\r\n                                <div v-if=\"code_arr.includes('code6')\" class=\"code-section text-start\">\r\n                                    <highlight>\r\n                                        <pre>\r\n&lt;button variant=&quot;primary&quot; class=&quot;me-2 btn&quot; @click=&quot;showAlert(6)&quot;&gt;Custom animation&lt;/button&gt;\r\n\r\nnew window.Swal({\r\n    title: 'Custom animation with Animate.css',\r\n    animation: false,\r\n    customClass: 'animated tada',\r\n    padding: '2em'\r\n});\r\n                                        </pre>\r\n                                    </highlight>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div id=\"sweetalertautoclosetimer\" class=\"col-lg-12 col-12 layout-spacing\">\r\n                    <div class=\"statbox panel box box-shadow\">\r\n                        <div class=\"panel-heading\">\r\n                            <div class=\"row\">\r\n                                <div class=\"col-xl-12 col-md-12 col-sm-12 col-12\">\r\n                                    <h4>Message with auto close timer</h4>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"panel-body text-center\">\r\n                            <button type=\"button\" class=\"btn btn-primary me-2 btn\" @click=\"showAlert(7)\">Message timer</button>\r\n                            <div class=\"code-section-container show-code\">\r\n                                <button class=\"btn btn-default toggle-code-snippet\" @click=\"toggleCode('code7')\"><span>Code</span></button>\r\n\r\n                                <div v-if=\"code_arr.includes('code7')\" class=\"code-section text-start\">\r\n                                    <highlight>\r\n                                        <pre>\r\n&lt;button variant=&quot;primary&quot; class=&quot;me-2 btn&quot; @click=&quot;showAlert(7)&quot;&gt;Message timer&lt;/button&gt;\r\n\r\nlet timerInterval;\r\n\r\nnew window.Swal({\r\n    title: 'Auto close alert!',\r\n    html: 'I will close in &lt;b&gt;&lt;/b&gt; milliseconds.',\r\n    timer: 2000,\r\n    timerProgressBar: true,\r\n    didOpen: () =&gt; {\r\n        new window.Swal.showLoading();\r\n        const b = new window.Swal.getHtmlContainer().querySelector('b');\r\n        timerInterval = setInterval(() =&gt; {\r\n            b.textContent = new window.Swal.getTimerLeft();\r\n        }, 100);\r\n    },\r\n    willClose: () =&gt; {\r\n        clearInterval(timerInterval);\r\n    }\r\n}).then((result)=> {\r\n    if (result.dismiss === new window.Swal.DismissReason.timer) {\r\n        console.log('I was closed by the timer');\r\n    }\r\n});\r\n                                        </pre>\r\n                                    </highlight>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div id=\"sweetalertcustomimage\" class=\"col-lg-12 col-12 layout-spacing\">\r\n                    <div class=\"statbox panel box box-shadow\">\r\n                        <div class=\"panel-heading\">\r\n                            <div class=\"row\">\r\n                                <div class=\"col-xl-12 col-md-12 col-sm-12 col-12\">\r\n                                    <h4>Message with custom image</h4>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"panel-body text-center\">\r\n                            <button type=\"button\" class=\"btn btn-primary me-2 btn\" @click=\"showAlert(8)\">Message with custom image</button>\r\n                            <div class=\"code-section-container show-code\">\r\n                                <button class=\"btn btn-default toggle-code-snippet\" @click=\"toggleCode('code8')\"><span>Code</span></button>\r\n\r\n                                <div v-if=\"code_arr.includes('code8')\" class=\"code-section text-start\">\r\n                                    <highlight>\r\n                                        <pre>\r\n&lt;button variant=&quot;primary&quot; class=&quot;me-2 btn&quot; @click=&quot;showAlert(8)&quot;&gt;Message with custom image&lt;/button&gt;\r\n\r\nnew window.Swal({\r\n    title: 'Sweet!',\r\n    text: 'Modal with a custom image.',\r\n    imageUrl: require('@/assets/images/thumbs-up.jpg'),\r\n    imageWidth: 224,\r\n    imageHeight: 200,\r\n    imageAlt: 'Custom image',\r\n    animation: false,\r\n    padding: '2em'\r\n});\r\n                                        </pre>\r\n                                    </highlight>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div id=\"sweetalertcustomhtml\" class=\"col-lg-12 col-12 layout-spacing\">\r\n                    <div class=\"statbox panel box box-shadow\">\r\n                        <div class=\"panel-heading\">\r\n                            <div class=\"row\">\r\n                                <div class=\"col-xl-12 col-md-12 col-sm-12 col-12\">\r\n                                    <h4>Custom HTML description and buttons</h4>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"panel-body text-center\">\r\n                            <button type=\"button\" class=\"btn btn-primary me-2 btn\" @click=\"showAlert(9)\">Custom Description & buttons</button>\r\n                            <div class=\"code-section-container show-code\">\r\n                                <button class=\"btn btn-default toggle-code-snippet\" @click=\"toggleCode('code9')\"><span>Code</span></button>\r\n\r\n                                <div v-if=\"code_arr.includes('code9')\" class=\"code-section text-start\">\r\n                                    <highlight>\r\n                                        <pre>\r\n&lt;button variant=&quot;primary&quot; class=&quot;me-2 btn&quot; @click=&quot;showAlert(9)&quot;&gt;Custom Description &amp; buttons&lt;/button&gt;\r\n\r\nnew window.Swal({\r\n    icon: 'info',\r\n    title: '&lt;i&gt;HTML&lt;/i&gt; &lt;u&gt;example&lt;/u&gt;',\r\n    html: 'You can use &lt;b&gt;bold text&lt;/b&gt;, ' + '&lt;a href=&quot;//github.com&quot;&gt;links&lt;/a&gt; ' + 'and other HTML tags',\r\n    showCloseButton: true,\r\n    showCancelButton: true,\r\n    focusConfirm: false,\r\n    confirmButtonText: '&lt;i class=&quot;flaticon-checked-1&quot;&gt;&lt;/i&gt; Great!',\r\n    confirmButtonAriaLabel: 'Thumbs up, great!',\r\n    cancelButtonText: '&lt;i class=&quot;flaticon-cancel-circle&quot;&gt;&lt;/i&gt; Cancel',\r\n    cancelButtonAriaLabel: 'Thumbs down',\r\n    padding: '2em'\r\n});\r\n                                        </pre>\r\n                                    </highlight>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div id=\"sweetalertwarningmessage\" class=\"col-lg-12 col-12 layout-spacing\">\r\n                    <div class=\"statbox panel box box-shadow\">\r\n                        <div class=\"panel-heading\">\r\n                            <div class=\"row\">\r\n                                <div class=\"col-xl-12 col-md-12 col-sm-12 col-12\">\r\n                                    <h4>Warning message, with \"Confirm\" button</h4>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"panel-body text-center\">\r\n                            <button type=\"button\" class=\"btn btn-primary me-2 btn\" @click=\"showAlert(10)\">Confirm</button>\r\n                            <div class=\"code-section-container show-code\">\r\n                                <button class=\"btn btn-default toggle-code-snippet\" @click=\"toggleCode('code10')\"><span>Confirm</span></button>\r\n\r\n                                <div v-if=\"code_arr.includes('code10')\" class=\"code-section text-start\">\r\n                                    <highlight>\r\n                                        <pre>\r\n&lt;button variant=&quot;primary&quot; class=&quot;me-2 btn&quot; @click=&quot;showAlert(10)&quot;&gt;Confirm&lt;/button&gt;\r\n\r\nnew window.Swal({\r\n    title: 'Are you sure?',\r\n    text: &quot;You won't be able to revert this!&quot;,\r\n    type: 'warning',\r\n    showCancelButton: true,\r\n    confirmButtonText: 'Delete',\r\n    padding: '2em'\r\n}).then(result =&gt; {\r\n    if (result.value) {\r\n        new window.Swal('Deleted!', 'Your file has been deleted.', 'success');\r\n    }\r\n});\r\n                                        </pre>\r\n                                    </highlight>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div id=\"sweetalertcancel\" class=\"col-lg-12 col-12 layout-spacing\">\r\n                    <div class=\"statbox panel box box-shadow\">\r\n                        <div class=\"panel-heading\">\r\n                            <div class=\"row\">\r\n                                <div class=\"col-xl-12 col-md-12 col-sm-12 col-12\">\r\n                                    <h4>Execute something else for \"Cancel\".</h4>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"panel-body text-center\">\r\n                            <button type=\"button\" class=\"btn btn-primary me-2 btn\" @click=\"showAlert(11)\">Addition else for \"Cancel\".</button>\r\n                            <div class=\"code-section-container show-code\">\r\n                                <button class=\"btn btn-default toggle-code-snippet\" @click=\"toggleCode('code11')\"><span>Code</span></button>\r\n\r\n                                <div v-if=\"code_arr.includes('code11')\" class=\"code-section text-start\">\r\n                                    <highlight>\r\n                                        <pre>\r\n&lt;button variant=&quot;primary&quot; class=&quot;me-2 btn&quot; @click=&quot;showAlert(11)&quot;&gt;Addition else for &quot;Cancel&quot;.&lt;/button&gt;\r\n\r\nconst swalWithBootstrapButtons =  window.Swal.mixin({\r\n    confirmButtonClass: 'btn btn-secondary',\r\n    cancelButtonClass: 'btn btn-dark me-3',\r\n    buttonsStyling: false\r\n});\r\nswalWithBootstrapButtons\r\n    .fire({\r\n        title: 'Are you sure?',\r\n        text: &quot;You won't be able to revert this!&quot;,\r\n        icon: 'warning',\r\n        showCancelButton: true,\r\n        confirmButtonText: 'Yes, delete it!',\r\n        cancelButtonText: 'No, cancel!',\r\n        reverseButtons: true,\r\n        padding: '2em'\r\n    })\r\n    .then(result =&gt; {\r\n        if (result.value) {\r\n            swalWithBootstrapButtons.fire('Deleted!', 'Your file has been deleted.', 'success');\r\n        } else if (result.dismiss === new window.Swal.DismissReason.cancel) {\r\n            swalWithBootstrapButtons.fire('Cancelled', 'Your imaginary file is safe :)', 'error');\r\n        }\r\n    });\r\n                                        </pre>\r\n                                    </highlight>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div id=\"sweetalertcustomstyle\" class=\"col-lg-12 col-12 layout-spacing\">\r\n                    <div class=\"statbox panel box box-shadow\">\r\n                        <div class=\"panel-heading\">\r\n                            <div class=\"row\">\r\n                                <div class=\"col-xl-12 col-md-12 col-sm-12 col-12\">\r\n                                    <h4>A message with custom width, padding and background</h4>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"panel-body text-center\">\r\n                            <button type=\"button\" class=\"btn btn-primary me-2 btn\" @click=\"showAlert(12)\">Custom Message</button>\r\n                            <div class=\"code-section-container show-code\">\r\n                                <button class=\"btn btn-default toggle-code-snippet\" @click=\"toggleCode('code12')\"><span>Code</span></button>\r\n\r\n                                <div v-if=\"code_arr.includes('code12')\" class=\"code-section text-start\">\r\n                                    <highlight>\r\n                                        <pre>\r\n&lt;button variant=&quot;primary&quot; class=&quot;me-2 btn&quot; @click=&quot;showAlert(12)&quot;&gt;Custom Message&lt;/button&gt;\r\n\r\nnew window.Swal({\r\n    title: 'Custom width, padding, background.',\r\n    width: 600,\r\n    padding: '7em',\r\n    customClass: 'background-modal',\r\n    background: '#fff url(' + require('@/assets/images/sweet-bg.jpg') + ') no-repeat 100% 100%'\r\n});\r\n                                        </pre>\r\n                                    </highlight>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div id=\"sweetalertfooter\" class=\"col-lg-12 col-12 layout-spacing\">\r\n                    <div class=\"statbox panel box box-shadow\">\r\n                        <div class=\"panel-heading\">\r\n                            <div class=\"row\">\r\n                                <div class=\"col-xl-12 col-md-12 col-sm-12 col-12\">\r\n                                    <h4>With Footer</h4>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"panel-body text-center\">\r\n                            <button type=\"button\" class=\"btn btn-primary me-2 btn\" @click=\"showAlert(13)\">With Footer</button>\r\n                            <div class=\"code-section-container show-code\">\r\n                                <button class=\"btn btn-default toggle-code-snippet\" @click=\"toggleCode('code13')\"><span>Code</span></button>\r\n\r\n                                <div v-if=\"code_arr.includes('code13')\" class=\"code-section text-start\">\r\n                                    <highlight>\r\n                                        <pre>\r\n&lt;button variant=&quot;primary&quot; class=&quot;me-2 btn&quot; @click=&quot;showAlert(13)&quot;&gt;With Footer&lt;/button&gt;\r\n\r\nnew window.Swal({\r\n    type: 'error',\r\n    title: 'Oops...',\r\n    text: 'Something went wrong!',\r\n    footer: '&lt;a href&gt;Why do I have this issue?&lt;/a&gt;',\r\n    padding: '2em'\r\n});\r\n                                        </pre>\r\n                                    </highlight>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div id=\"sweetalertrtl\" class=\"col-lg-12 col-12 layout-spacing\">\r\n                    <div class=\"statbox panel box box-shadow\">\r\n                        <div class=\"panel-heading\">\r\n                            <div class=\"row\">\r\n                                <div class=\"col-xl-12 col-md-12 col-sm-12 col-12\">\r\n                                    <h4>RTL Support</h4>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"panel-body text-center\">\r\n                            <button type=\"button\" class=\"btn btn-primary me-2 btn\" @click=\"showAlert(14)\">RTL</button>\r\n                            <div class=\"code-section-container show-code\">\r\n                                <button class=\"btn btn-default toggle-code-snippet\" @click=\"toggleCode('code14')\"><span>Code</span></button>\r\n\r\n                                <div v-if=\"code_arr.includes('code14')\" class=\"code-section text-start\">\r\n                                    <highlight>\r\n                                        <pre>\r\n&lt;button variant=&quot;primary&quot; class=&quot;me-2 btn&quot; @click=&quot;showAlert(14)&quot;&gt;RTL&lt;/button&gt;\r\n\r\nnew window.Swal({\r\n    title: 'هل تريد الاستمرار؟',\r\n    confirmButtonText: 'نعم',\r\n    cancelButtonText: 'لا',\r\n    showCancelButton: true,\r\n    showCloseButton: true,\r\n    padding: '2em',\r\n    target: document.getElementById('rtl-container')\r\n});\r\n                                        </pre>\r\n                                    </highlight>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div id=\"sweetalertmixin\" class=\"col-lg-12 col-12 layout-spacing\">\r\n                    <div class=\"statbox panel box box-shadow\">\r\n                        <div class=\"panel-heading\">\r\n                            <div class=\"row\">\r\n                                <div class=\"col-xl-12 col-md-12 col-sm-12 col-12\">\r\n                                    <h4>Mixin</h4>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"panel-body text-center\">\r\n                            <button type=\"button\" class=\"btn btn-primary me-2 btn\" @click=\"showAlert(15)\">Mixin</button>\r\n                            <div class=\"code-section-container show-code\">\r\n                                <button class=\"btn btn-default toggle-code-snippet\" @click=\"toggleCode('code15')\"><span>Code</span></button>\r\n\r\n                                <div v-if=\"code_arr.includes('code15')\" class=\"code-section text-start\">\r\n                                    <highlight>\r\n                                        <pre>\r\n&lt;button variant=&quot;primary&quot; class=&quot;me-2 btn&quot; @click=&quot;showAlert(15)&quot;&gt;Mixin&lt;/button&gt;\r\n\r\nconst toast =  window.Swal.mixin({\r\n    toast: true,\r\n    position: 'top-end',\r\n    showConfirmButton: false,\r\n    timer: 3000,\r\n    padding: '2em'\r\n});\r\ntoast.fire({\r\n    icon: 'success',\r\n    title: 'Signed in successfully',\r\n    padding: '2em'\r\n});\r\n                                        </pre>\r\n                                    </highlight>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script setup>\r\n    import { ref } from 'vue';\r\n    import '@/assets/sass/scrollspyNav.scss';\r\n    import '@/assets/sass/components/custom-sweetalert.scss';\r\n    import highlight from '@/components/plugins/highlight.vue';\r\n\r\n    import { useMeta } from '@/composables/use-meta';\r\n    useMeta({ title: 'Sweet Alert' });\r\n\r\n    const code_arr = ref([]);\r\n    const toggleCode = (name) => {\r\n        if (code_arr.value.includes(name)) {\r\n            code_arr.value = code_arr.value.filter((d) => d != name);\r\n        } else {\r\n            code_arr.value.push(name);\r\n        }\r\n    };\r\n\r\n    const showAlert = async (type) => {\r\n        if (type === 1) {\r\n            new window.Swal({\r\n                title: 'Saved succesfully',\r\n                padding: '2em',\r\n            });\r\n        } else if (type === 2) {\r\n            new window.Swal({\r\n                icon: 'success',\r\n                title: 'Good job!',\r\n                text: 'You clicked the!',\r\n                padding: '2em',\r\n            });\r\n        } else if (type === 3) {\r\n            const ipAPI = 'https://api.ipify.org?format=json';\r\n            new window.Swal({\r\n                title: 'Your public IP',\r\n                confirmButtonText: 'Show my public IP',\r\n                text: 'Your public IP will be received ' + 'via AJAX request',\r\n                showLoaderOnConfirm: true,\r\n                preConfirm: () => {\r\n                    return fetch(ipAPI)\r\n                        .then((response) => {\r\n                            return response.json();\r\n                        })\r\n                        .then((data) => {\r\n                            new window.Swal({\r\n                                title: data.ip,\r\n                            });\r\n                        })\r\n                        .catch(() => {\r\n                            new window.Swal({\r\n                                type: 'error',\r\n                                title: 'Unable to get your public IP',\r\n                            });\r\n                        });\r\n                },\r\n            });\r\n        } else if (type === 4) {\r\n            new window.Swal({\r\n                icon: 'question',\r\n                title: 'The Internet?',\r\n                text: 'That thing is still around?',\r\n                padding: '2em',\r\n            });\r\n        } else if (type === 5) {\r\n            const steps = ['1', '2', '3'];\r\n            const swalQueueStep = window.Swal.mixin({\r\n                confirmButtonText: 'Next →',\r\n                showCancelButton: true,\r\n                progressSteps: steps,\r\n                input: 'text',\r\n                inputAttributes: {\r\n                    required: true,\r\n                },\r\n                validationMessage: 'This field is required',\r\n                padding: '2em',\r\n            });\r\n\r\n            const values = [];\r\n            let currentStep;\r\n\r\n            for (currentStep = 0; currentStep < steps.length; ) {\r\n                const result = await swalQueueStep.fire({\r\n                    title: `Question ${steps[currentStep]}`,\r\n                    text: currentStep == 0 ? 'Chaining swal2 modals is easy.' : '',\r\n                    inputValue: values[currentStep],\r\n                    showCancelButton: currentStep > 0,\r\n                    currentProgressStep: currentStep,\r\n                });\r\n\r\n                if (result.value) {\r\n                    values[currentStep] = result.value;\r\n                    currentStep++;\r\n                } else if (result.dismiss === new window.Swal.DismissReason.cancel()) {\r\n                    currentStep--;\r\n                } else {\r\n                    break;\r\n                }\r\n            }\r\n\r\n            if (currentStep === steps.length) {\r\n                window.Swal.fire({\r\n                    title: 'All done!',\r\n                    padding: '2em',\r\n                    html: 'Your answers: <pre>' + JSON.stringify(values) + '</pre>',\r\n                    confirmButtonText: 'Lovely!',\r\n                });\r\n            }\r\n        } else if (type === 6) {\r\n            new window.Swal({\r\n                title: 'Custom animation with Animate.css',\r\n                animation: false,\r\n                customClass: 'animated tada',\r\n                padding: '2em',\r\n            });\r\n        } else if (type === 7) {\r\n            let timerInterval;\r\n\r\n            new window.Swal({\r\n                title: 'Auto close alert!',\r\n                html: 'I will close in <b></b> milliseconds.',\r\n                timer: 2000,\r\n                timerProgressBar: true,\r\n                didOpen: () => {\r\n                    window.Swal.showLoading();\r\n                    const b = window.Swal.getHtmlContainer().querySelector('b');\r\n                    timerInterval = setInterval(() => {\r\n                        b.textContent = window.Swal.getTimerLeft();\r\n                    }, 100);\r\n                },\r\n                willClose: () => {\r\n                    clearInterval(timerInterval);\r\n                },\r\n            }).then((result) => {\r\n                if (result.dismiss === window.Swal.DismissReason.timer) {\r\n                    console.log('I was closed by the timer');\r\n                }\r\n            });\r\n        } else if (type === 8) {\r\n            new window.Swal({\r\n                title: 'Sweet!',\r\n                text: 'Modal with a custom image.',\r\n                imageUrl: require('@/assets/images/thumbs-up.jpg'),\r\n                imageWidth: 224,\r\n                imageHeight: 200,\r\n                imageAlt: 'Custom image',\r\n                animation: false,\r\n                padding: '2em',\r\n            });\r\n        } else if (type === 9) {\r\n            new window.Swal({\r\n                icon: 'info',\r\n                title: '<i>HTML</i> <u>example</u>',\r\n                html: 'You can use <b>bold text</b>, ' + '<a href=\"//github.com\">links</a> ' + 'and other HTML tags',\r\n                showCloseButton: true,\r\n                showCancelButton: true,\r\n                focusConfirm: false,\r\n                confirmButtonText: '<i class=\"flaticon-checked-1\"></i> Great!',\r\n                confirmButtonAriaLabel: 'Thumbs up, great!',\r\n                cancelButtonText: '<i class=\"flaticon-cancel-circle\"></i> Cancel',\r\n                cancelButtonAriaLabel: 'Thumbs down',\r\n                padding: '2em',\r\n            });\r\n        } else if (type === 10) {\r\n            new window.Swal({\r\n                icon: 'warning',\r\n                title: 'Are you sure?',\r\n                text: \"You won't be able to revert this!\",\r\n                showCancelButton: true,\r\n                confirmButtonText: 'Delete',\r\n                padding: '2em',\r\n            }).then((result) => {\r\n                if (result.value) {\r\n                    new window.Swal('Deleted!', 'Your file has been deleted.', 'success');\r\n                }\r\n            });\r\n        } else if (type === 11) {\r\n            const swalWithBootstrapButtons = window.Swal.mixin({\r\n                confirmButtonClass: 'btn btn-secondary',\r\n                cancelButtonClass: 'btn btn-dark me-3',\r\n                buttonsStyling: false,\r\n            });\r\n            swalWithBootstrapButtons\r\n                .fire({\r\n                    title: 'Are you sure?',\r\n                    text: \"You won't be able to revert this!\",\r\n                    icon: 'warning',\r\n                    showCancelButton: true,\r\n                    confirmButtonText: 'Yes, delete it!',\r\n                    cancelButtonText: 'No, cancel!',\r\n                    reverseButtons: true,\r\n                    padding: '2em',\r\n                })\r\n                .then((result) => {\r\n                    if (result.value) {\r\n                        swalWithBootstrapButtons.fire('Deleted!', 'Your file has been deleted.', 'success');\r\n                    } else if (result.dismiss === window.Swal.DismissReason.cancel) {\r\n                        swalWithBootstrapButtons.fire('Cancelled', 'Your imaginary file is safe :)', 'error');\r\n                    }\r\n                });\r\n        } else if (type === 12) {\r\n            new window.Swal({\r\n                title: 'Custom width, padding, background.',\r\n                width: 600,\r\n                padding: '7em',\r\n                customClass: 'background-modal',\r\n                background: '#fff url(' + require('@/assets/images/sweet-bg.jpg') + ') no-repeat 100% 100%',\r\n            });\r\n        } else if (type === 13) {\r\n            new window.Swal({\r\n                icon: 'error',\r\n                title: 'Oops...',\r\n                text: 'Something went wrong!',\r\n                footer: '<a href>Why do I have this issue?</a>',\r\n                padding: '2em',\r\n            });\r\n        } else if (type === 14) {\r\n            new window.Swal({\r\n                title: 'هل تريد الاستمرار؟',\r\n                confirmButtonText: 'نعم',\r\n                cancelButtonText: 'لا',\r\n                showCancelButton: true,\r\n                showCloseButton: true,\r\n                padding: '2em',\r\n                target: document.getElementById('rtl-container'),\r\n            });\r\n        } else if (type === 15) {\r\n            const toast = window.Swal.mixin({\r\n                toast: true,\r\n                position: 'top-end',\r\n                showConfirmButton: false,\r\n                timer: 3000,\r\n                padding: '2em',\r\n            });\r\n            toast.fire({\r\n                icon: 'success',\r\n                title: 'Signed in successfully',\r\n                padding: '2em',\r\n            });\r\n        }\r\n    };\r\n</script>\r\n","import script from \"./sweetalert.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./sweetalert.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__"],"names":["$","$includes","fails","addToUnscopables","BROKEN_ON_SPARSE","Array","includes","target","proto","forced","el","this","arguments","length","undefined","useMeta","title","code_arr","ref","toggleCode","name","value","filter","d","push","showAlert","async","type","window","Swal","padding","icon","text","ipAPI","confirmButtonText","showLoaderOnConfirm","preConfirm","fetch","then","response","json","data","ip","catch","steps","swalQueueStep","mixin","showCancelButton","progressSteps","input","inputAttributes","required","validationMessage","values","currentStep","result","fire","inputValue","currentProgressStep","dismiss","DismissReason","cancel","html","JSON","stringify","animation","customClass","timerInterval","timer","timerProgressBar","didOpen","showLoading","b","getHtmlContainer","querySelector","setInterval","textContent","getTimerLeft","willClose","clearInterval","console","log","imageUrl","require","imageWidth","imageHeight","imageAlt","showCloseButton","focusConfirm","confirmButtonAriaLabel","cancelButtonText","cancelButtonAriaLabel","swalWithBootstrapButtons","confirmButtonClass","cancelButtonClass","buttonsStyling","reverseButtons","width","background","footer","document","getElementById","toast","position","showConfirmButton","__exports__"],"sourceRoot":""}